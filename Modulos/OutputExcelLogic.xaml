<Activity mc:Ignorable="sap sap2010" x:Class="OutputExcelLogic" this:OutputExcelLogic.in_pokemon_name="charizard" this:OutputExcelLogic.in_lista_datos="[new List (Of String) From {&quot;pokemon_id&quot;,&quot;pokemon_name&quot;,&quot;abilities&quot;,&quot;types&quot;,&quot;base_hp&quot;,&quot;base_att&quot;,&quot;base_def&quot;,&quot;base_spa&quot;,&quot;base_spd&quot;,&quot;base_speed&quot;,&quot;sprite&quot;,&quot;moves&quot;,&quot;height&quot;,&quot;weight&quot;}]" this:OutputExcelLogic.in_ruta_excel_output="prueba.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_pokemon_dt" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_pokemon_name" Type="InArgument(x:String)" />
    <x:Property Name="in_lista_datos" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_ruta_excel_output" Type="InArgument(x:String)" />
  </x:Members>
  <this:OutputExcelLogic.in_pokemon_dt>
    <InArgument x:TypeArguments="sd:DataTable" />
  </this:OutputExcelLogic.in_pokemon_dt>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1139,8450</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>OutputExcelLogic_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="OutputExcelLogic" sap:VirtualizedContainerService.HintSize="592,8385" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="moves" />
      <Variable x:TypeArguments="x:Int32" Name="moves_idx" />
      <Variable x:TypeArguments="s:String[]" Name="types" />
      <Variable x:TypeArguments="x:Int32" Name="types_idx" />
      <Variable x:TypeArguments="x:Int32" Name="type_idx" />
      <Variable x:TypeArguments="x:Int32" Name="move_idx" />
      <Variable x:TypeArguments="x:Int32" Name="abilities_idx" />
      <Variable x:TypeArguments="njl:JArray" Name="abilities" />
      <Variable x:TypeArguments="x:Int32" Name="ability_idx" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GenerateDataTable ColumnSizes="{x:Null}" Positions="{x:Null}" CSVParsing="False" ColumnSeparators=";" DataTable="[in_pokemon_dt]" DisplayName="Generar tabla de datos" sap:VirtualizedContainerService.HintSize="530,201" sap2010:WorkflowViewState.IdRef="GenerateDataTable_1" Input="pokemon_id;pokemon_name;abilities;types;base_hp;base_att;base_def;base_spa;base_spd;base_speed;sprite;moves;height;weight&#xD;&#xA;6;charizard;[{'name': 'blaze', 'hidden': 'False'},{'name': 'solar power', 'hidden': 'True'},];fire,flying,;78;84;78;109;85;100;0x89504E470D0A1A0A0000000D494844520000009D00000012080600000041C0DCDB0000000467414D410000B18F0BFC6105000000097048597300000EC200000EC20115284A8000000047494441546843EDD2310100300C04A1DA7CFF4252173731E080B7EDA0241D39E9C849474E3A72D291938E9C74E4A423271D39E9C849474E3A72D291938E9C74E4A423271DB1DD07F83183AF1650C6230000000049454E44AE426082;mega-punch,fire-punch,thunder-punch,scratch,swords-dance,cut,wing-attack,fly,mega-kick,headbutt,body-slam,take-down,double-edge,leer,growl,roar,ember,flamethrower,hyper-beam,submission,counter,seismic-toss,strength,solar-beam,dragon-rage,fire-spin,earthquake,fissure,dig,toxic,rage,mimic,double-team,smokescreen,defense-curl,reflect,bide,fire-blast,swift,skull-bash,fury-swipes,rest,rock-slide,slash,substitute,snore,curse,protect,scary-face,mud-slap,outrage,sandstorm,endure,false-swipe,swagger,fury-cutter,steel-wing,attract,sleep-talk,return,frustration,dynamic-punch,dragon-breath,iron-tail,metal-claw,hidden-power,twister,sunny-day,crunch,rock-smash,beat-up,heat-wave,will-o-wisp,facade,focus-punch,helping-hand,brick-break,secret-power,blaze-kick,blast-burn,weather-ball,air-cutter,overheat,rock-tomb,aerial-ace,dragon-claw,dragon-dance,roost,natural-gift,tailwind,fling,flare-blitz,air-slash,dragon-pulse,focus-blast,giga-impact,shadow-claw,fire-fang,defog,captivate,ominous-wind,hone-claws,flame-burst,flame-charge,round,echoed-voice,sky-drop,incinerate,acrobatics,inferno,fire-pledge,bulldoze,dragon-tail,work-up,heat-crash,hurricane,confide,mystical-fire,power-up-punch,brutal-swing,breaking-swipe,scale-shot,dual-wingbeat,scorching-sands,tera-blast,;1;90.5" NewLineSeparator="&#xA;" UseColumnHeader="True" />
    <Sequence DisplayName="Quitar la columna &quot;sprite&quot;" sap:VirtualizedContainerService.HintSize="530,545" sap2010:WorkflowViewState.IdRef="Sequence_80">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="sprite" DataTable="[in_pokemon_dt]" DisplayName="Aquí se quita en la DT" sap:VirtualizedContainerService.HintSize="388,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_4" />
      <InvokeMethod sap2010:Annotation.AnnotationText="Como en la DT ya no está la columna &quot;pokemon_name&quot;, hay que actualizar esta lista para que tampoco esté" DisplayName="Y aquí se quita en la lista de entrada" sap:VirtualizedContainerService.HintSize="388,208" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="scg:List(x:String)">[in_lista_datos]</InArgument>
        </InvokeMethod.TargetObject>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <InArgument x:TypeArguments="x:String">pokemon_name</InArgument>
      </InvokeMethod>
    </Sequence>
    <Sequence DisplayName="Manejar el nombre del pokemon" sap:VirtualizedContainerService.HintSize="530,937" sap2010:WorkflowViewState.IdRef="Sequence_79">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[in_lista_datos.Contains(&quot;pokemon_name&quot;)]" DisplayName="Si en las cabeceras está el nombre del pokemon" sap:VirtualizedContainerService.HintSize="434,704" sap2010:WorkflowViewState.IdRef="If_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="376,522" sap2010:WorkflowViewState.IdRef="Sequence_69">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="pokemon_name" DataTable="[in_pokemon_dt]" DisplayName="Quitar la columna que tiene el nombre" sap:VirtualizedContainerService.HintSize="334,186" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2" />
            <InvokeMethod sap2010:Annotation.AnnotationText="Como en la DT ya no está la columna &quot;pokemon_name&quot;, hay que actualizar esta lista para que tampoco esté" DisplayName="Actualizar la lista &quot;cabeceras&quot;" sap:VirtualizedContainerService.HintSize="334,208" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Remove">
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="scg:List(x:String)">[in_lista_datos]</InArgument>
              </InvokeMethod.TargetObject>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <InArgument x:TypeArguments="x:String">pokemon_name</InArgument>
            </InvokeMethod>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_70">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <Assign DisplayName="Poner la primera letra en mayúscula" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_50">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[in_pokemon_name]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_pokemon_name.Substring(0, 1).ToUpper() + in_pokemon_name.Substring(1)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <If Condition="[in_lista_datos.Contains(&quot;abilities&quot;)]" DisplayName="Si se ha pedido &quot;abilities&quot;, crea una columna nueva &quot;ab_hidden&quot;" sap:VirtualizedContainerService.HintSize="530,987" sap2010:WorkflowViewState.IdRef="If_9">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,805" sap2010:WorkflowViewState.IdRef="Sequence_61">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Obtener el índice de la columna &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_49">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[abilities_idx]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_lista_datos.IndexOf("abilities")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="ab_hidden" DataTable="[in_pokemon_dt]" DisplayName="Añadir la columna &quot;ab_hidden&quot;" sap:VirtualizedContainerService.HintSize="434,186" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_14" />
          <InvokeMethod DisplayName="Mover la columna &quot;ab_hidden&quot; al lado de &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="434,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="SetOrdinal">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="sd:DataColumn">[in_pokemon_dt.Columns("ab_hidden")]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="x:Int32">[abilities_idx + 1]</InArgument>
          </InvokeMethod>
          <InvokeMethod sap2010:Annotation.AnnotationText="Como en la DT hay una columna nueva, hay que actualizar de nuevo esta lista para reflejar este cambio" DisplayName="Actualizar la lista &quot;cabeceras&quot;" sap:VirtualizedContainerService.HintSize="434,193" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Insert">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="scg:List(x:String)">[in_lista_datos]</InArgument>
            </InvokeMethod.TargetObject>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <InArgument x:TypeArguments="x:Int32">[abilities_idx]</InArgument>
            <InArgument x:TypeArguments="x:String">ab_hidden</InArgument>
          </InvokeMethod>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_62" />
      </If.Else>
    </If>
    <If Condition="[in_lista_datos.Contains(&quot;height&quot;)]" DisplayName="Si se ha pedido &quot;height&quot;, cambiar su nombre" sap:VirtualizedContainerService.HintSize="530,352" sap2010:WorkflowViewState.IdRef="If_14">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_75">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Añadir &quot;(cm)&quot; al nombre de la columna" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_54">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_pokemon_dt.Columns("height").ColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">height (cm)</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_76" />
      </If.Else>
    </If>
    <If Condition="[in_lista_datos.Contains(&quot;weight&quot;)]" DisplayName="Si se ha pedido &quot;height&quot;, cambiar su nombre" sap:VirtualizedContainerService.HintSize="530,352" sap2010:WorkflowViewState.IdRef="If_15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_77">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_55">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[in_pokemon_dt.Columns("weight").ColumnName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">weight (kg)</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_78" />
      </If.Else>
    </If>
    <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" sap2010:Annotation.AnnotationText="Las columnas que tengan más de una fila se actualizarán a continuación" DataTable="[in_pokemon_dt]" DisplayName="Meter la DT en el Excel" sap:VirtualizedContainerService.HintSize="530,158" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="[in_pokemon_name]" WorkbookPath="[in_ruta_excel_output]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WriteRange>
    <If Condition="[in_lista_datos.Contains(&quot;abilities&quot;)]" DisplayName="Si se ha pedido &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="530,1550" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="452,1368" sap2010:WorkflowViewState.IdRef="Sequence_63">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DeserializeJsonArray sap2010:Annotation.AnnotationText="Aquí saco la única celda que está dentro de la columna &quot;abilities&quot;. Luego lo separo a un JArray" DisplayName="Obtener el JArray de &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="410,102" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_2" JsonArray="[abilities]" JsonString="[in_pokemon_dt.AsEnumerable().Aggregate(&quot;&quot;, Function (a, r) a + r.Field(Of String)(&quot;abilities&quot;).ToString)]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:DeserializeJsonArray>
          <ui:ForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Selecciono la propiedad &quot;name&quot; de cada JObject del JArray &quot;abilities&quot;.&#xA;El resultado es un IEnumerable" CurrentIndex="[ability_idx]" DisplayName="Rellenar la columna &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="410,504" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[abilities.Select(Function (a) a(&quot;name&quot;).ToString)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="ab_name" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="376,276" sap2010:WorkflowViewState.IdRef="Sequence_55">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="La celda que relleno tiene las siguientes coordenadas:&#xA;- La columna donde está &quot;ab_name&quot; (&quot;abilities_idx&quot;), y como lo tengo que pasar a letra, le sumo el código ASCII de la &quot;A&quot; que es 65" Cell="[chr(abilities_idx + 65) + (ability_idx + 2).ToString]" DisplayName="Añadir ab_name a la columna" sap:VirtualizedContainerService.HintSize="334,188" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="[in_pokemon_name]" Text="[ab_name]" WorkbookPath="[in_ruta_excel_output]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Selecciono la propiedad &quot;hidden&quot; de cada JObject del JArray &quot;abilities&quot;.&#xA;El resultado es un IEnumerable" CurrentIndex="[ability_idx]" DisplayName="Rellenar la columna &quot;ab_hidden&quot;" sap:VirtualizedContainerService.HintSize="410,594" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[abilities.Select(Function (a) a(&quot;hidden&quot;).ToString)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="ab_hidden" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="376,351" sap2010:WorkflowViewState.IdRef="Sequence_59">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="La celda que relleno tiene las siguientes coordenadas:&#xA;- La columna donde está &quot;ab_hidden&quot;, que es la que está a la derecha de &quot;abilities_idx&quot; (por lo que &quot;abilities_idx + 1), y como lo tengo que pasar a letra, le sumo el código ASCII de la &quot;A&quot; que es 65&#xA;- La fila es el índice de la iteración actual de este bucle (&quot;ability_idx&quot;) empezando en 0. Como las filas en Excel empieza desde 1, le sumo 1, y como la primera fila es la cabecera, le sumo otro 1" Cell="[chr(abilities_idx + 65 + 1) + (ability_idx + 2).ToString]" DisplayName="Añadir ab_hidden a la columna" sap:VirtualizedContainerService.HintSize="334,263" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="[in_pokemon_name]" Text="[ab_hidden]" WorkbookPath="[in_ruta_excel_output]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64" />
      </If.Else>
    </If>
    <If Condition="[in_lista_datos.Contains(&quot;types&quot;)]" DisplayName="Si se ha pedido &quot;types&quot;" sap:VirtualizedContainerService.HintSize="530,1076" sap2010:WorkflowViewState.IdRef="If_11">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,894" sap2010:WorkflowViewState.IdRef="Sequence_65">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Aquí saco la única celda que está dentro de la columna &quot;types&quot;. Luego lo separo a un Array" DisplayName="De string a array -&gt; &quot;types&quot;" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="Assign_41">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[types]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[in_pokemon_dt.Rows(0).Item("types").ToString.Split(",", StringSplitOptions.RemoveEmptyEntries)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign DisplayName="Obtener el índice de la columna &quot;types&quot;" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_42">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[types_idx]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_lista_datos.IndexOf("types")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[type_idx]" DisplayName="Rellenar la columna &quot;abilities&quot;" sap:VirtualizedContainerService.HintSize="434,522" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[types]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="type" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="376,336" sap2010:WorkflowViewState.IdRef="Sequence_46">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="La celda que relleno tiene las siguientes coordenadas:&#xA;- La columna donde está &quot;types&quot; (&quot;types_idx&quot;), y como lo tengo que pasar a letra, le sumo el código ASCII de la &quot;A&quot; que es 65&#xA;- La fila es el índice de la iteración actual de este bucle (&quot;type_idx&quot;) empezando en 0. Como las filas en Excel empieza desde 1, le sumo 1, y como la primera fila es la cabecera, le sumo otro 1" Cell="[chr(types_idx + 65) + (type_idx + 2).ToString]" DisplayName="Añadir type a la columna" sap:VirtualizedContainerService.HintSize="334,248" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="[in_pokemon_name]" Text="[type]" WorkbookPath="[in_ruta_excel_output]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66" />
      </If.Else>
    </If>
    <If Condition="[in_lista_datos.Contains(&quot;moves&quot;)]" DisplayName="Si se ha pedido &quot;moves&quot;" sap:VirtualizedContainerService.HintSize="530,1076" sap2010:WorkflowViewState.IdRef="If_12">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="476,894" sap2010:WorkflowViewState.IdRef="Sequence_67">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Aquí saco la única celda que está dentro de la columna &quot;moves&quot;. Luego cambio cada &quot;-&quot; por un espacio y lo separo a un Array" DisplayName="De string a array -&gt; &quot;moves&quot;" sap:VirtualizedContainerService.HintSize="434,123" sap2010:WorkflowViewState.IdRef="Assign_39">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[moves]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[in_pokemon_dt.Rows(0).Item("moves").ToString.Replace("-"," ").Split(",", StringSplitOptions.RemoveEmptyEntries)]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign DisplayName="Obtener el índice de la columna &quot;moves&quot;" sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[moves_idx]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_lista_datos.IndexOf("moves")]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[move_idx]" DisplayName="Para cada" sap:VirtualizedContainerService.HintSize="434,522" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[moves]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="move" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="376,336" sap2010:WorkflowViewState.IdRef="Sequence_47">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WriteCell sap2010:Annotation.AnnotationText="La celda que relleno tiene las siguientes coordenadas:&#xA;- La columna donde está &quot;moves&quot; (&quot;moves_idx&quot;), y como lo tengo que pasar a letra, le sumo el código ASCII de la &quot;A&quot; que es 65&#xA;- La fila es el índice de la iteración actual de este bucle (&quot;move_idx&quot;) empezando en 0. Como las filas en Excel empieza desde 1, le sumo 1, y como la primera fila es la cabecera, le sumo otro 1" Cell="[chr(moves_idx + 65) + (move_idx + 2).ToString]" DisplayName="Añadir move a la columna" sap:VirtualizedContainerService.HintSize="334,248" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="[in_pokemon_name]" Text="[move]" WorkbookPath="[in_ruta_excel_output]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:WriteCell>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_68" />
      </If.Else>
    </If>
    <ueab:SequenceX DisplayName="Ámbito del proceso de Excel único" sap:VirtualizedContainerService.HintSize="530,640" sap2010:WorkflowViewState.IdRef="SequenceX_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="Esta era la única manera para ajustar el ancho de las columnas del Excel fácilmente" CreateNewFile="False" DisplayName="Utilice el archivo de Excel" sap:VirtualizedContainerService.HintSize="468,529" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="None" TemplatePath="plantilla.xlsx" WorkbookPath="[in_ruta_excel_output]">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <ueab:AutoFitX sap2010:Annotation.AnnotationText="El rango se compone de:&#xA;- Arriba a la derecha (&quot;A1&quot;)&#xA;* Hasta el número de columnas que haya (sumando 65 (&quot;A&quot;) para convertirlo en una letra con &quot;chr()&quot;)&#xA;* Hasta el número de filas de las columna que más filas tenga (más 1 por la cabecera)" Columns="True" DisplayName="Rango de ajuste automático" sap:VirtualizedContainerService.HintSize="434,218" sap2010:WorkflowViewState.IdRef="AutoFitX_2" Range="[Excel.Sheet(in_pokemon_name).Range(&quot;A1:&quot; + chr(in_lista_datos.Count + 65) + (Math.Max(abilities.Count, Math.Max(types.Length, moves.Length)) + 1).ToString)]" Rows="False">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ueab:AutoFitX>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelApplicationCard>
    </ueab:SequenceX>
  </Sequence>
</Activity>